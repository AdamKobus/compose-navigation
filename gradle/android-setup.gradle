import com.adamkobus.compose.navigation.Lib

def commitIndex = "git rev-list HEAD --count".execute().text.trim()
def versionSuffix = rootProject.properties.getOrDefault("versionSuffix", "")

ext {
    projectVersionCode = commitIndex.toInteger()
    projectVersionName = "1.0.$commitIndex$versionSuffix"
}

subprojects { subproject ->
    pluginManager.withPlugin("kotlin-android") {
        configureKotlinAndroid(subproject)
    }

    pluginManager.withPlugin("com.android.application") {
        configureAndroidProject(subproject, true)
    }

    pluginManager.withPlugin("com.android.library") {
        configureAndroidProject(subproject, false)
    }
}

def configureAndroidProject(Project androidProject, boolean isApplication) {
    androidProject.android {
        compileSdkVersion 33

        defaultConfig {
            minSdkVersion 26
            targetSdkVersion 33
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

            if (isApplication) {
                versionCode projectVersionCode
                versionName projectVersionName
            }

            vectorDrawables {
                useSupportLibrary true
            }
        }
        if (isApplication) {
            signingConfigs {
                release {
                    storeFile file(rootProject.file("keystore/release.jks"))
                    storePassword "debug123"
                    keyAlias "debug"
                    keyPassword "debug123"
                }
            }

            buildTypes {
                release {
                    signingConfig signingConfigs.release
                }
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }

        buildFeatures {
            compose true
        }
        composeOptions {
            kotlinCompilerExtensionVersion Lib.COMPOSE_COMPILER_VERSION
        }

        packagingOptions {
            resources {
                excludes += "/META-INF/{AL2.0,LGPL2.1}"
            }
        }
    }
}

def configureKotlinAndroid(Project kotlinProject) {
    kotlinProject.pluginManager.apply("org.jlleitschuh.gradle.ktlint")
    kotlinProject.android {
        kotlinOptions {
            jvmTarget = '17'
        }
    }
    kotlinProject.ktlint {
        outputColorName = "RED"
        outputToConsole = true

        reporters {
            reporter "plain"
        }
        filter {
            exclude("**/generated/**")
        }
    }
    kotlinProject.pluginManager.apply("io.gitlab.arturbosch.detekt")
    kotlinProject.detekt {
        config = files("${rootProject.projectDir}/detekt/config/default.yml",
                "${rootProject.projectDir}/detekt/config/custom.yml")
        reports {
            html.enabled = true
            txt.enabled = true
        }
    }
}
